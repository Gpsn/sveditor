<project name="release" default="release">

	<property environment="env"/>

	<!-- Import the version info -->
	<property file="${basedir}/../etc/sveditor.info"/>
	<property file="${basedir}/../etc/sveditor_${version_type}.info"/>
	<property file="${basedir}/build.properties"/>

	<property name="sf_frs_url" value="${env.SF_USERNAME},sveditor@frs.sourceforge.net"/>
	<property name="sf_web_url" value="${env.SF_USERNAME},sveditor@web.sourceforge.net"/>

	<condition property="sf_update_dir"
		value="update"
		else="update_testing">
		<equals arg1="${version_type}" arg2="release"/>
	</condition>

	<property 
		name="sf_update_url" 
		value="${sf_web_url}:htdocs/${sf_update_dir}"/>

	<property name="rlsdir" value="${basedir}/../release"/>
	<property name="srcdir" value="${basedir}/../sveditor"/>
	<property name="feature.version" value="${version}"/>
	<property name="buildDirectory"   value="${basedir}/../build"/>
	<property name="buildResult"      value="${basedir}/../buildResult"/>

	<target name="release" depends="release-prereqs, upload_release">
		<!-- remove release dir once complete -->
		<delete dir="${basedir}/../release"/>
	</target>

	<target name="release-prereqs" depends="build, mksrc, mk_rn">
		<mkdir dir="${rlsdir}"/>

		<unzip src="${buildResult}/sveditor-release-${feature.version}.zip"
			dest="${rlsdir}"/>
       
<!--
		<delete dir="${rlsdir}"/> 
		<delete dir="${buildDirectory}"/>
 -->
	</target>

	<target name="upload_release">
		<!-- First, create appropriate directories -->
		<tempfile property="release_mkdirs_cmds"/>
		<echo file="${release_mkdirs_cmds}">
                cd ${sveditor_dir}
                -mkdir ${frs_update_site_dir}
                cd ${frs_update_site_dir}
                -mkdir ${feature.version}
                cd ${feature.version}
                -mkdir plugins
                -mkdir features
                cd ${sveditor_dir}/sveditor
                -mkdir ${feature.version}
		</echo>
		<exec executable="sftp" input="${release_mkdirs_cmds}">
                    <arg value="-b"/>
                    <arg value="/dev/stdin"/>
                    <arg value="${sf_frs_url}"/>
                </exec>
		<delete file="${release_mkdirs_cmds}"/>

		<!-- Now, copy the release files into the update site -->
		<exec executable="sftp" dir="${rlsdir}/features"
                    inputstring="put *.jar">
			<arg value="-b"/>
			<arg value="/dev/stdin"/>
			<arg value="${sf_frs_url}:${sveditor_dir}/${frs_update_site_dir}/${feature.version}/features"/>
		</exec>
		<exec executable="sftp" dir="${rlsdir}/plugins"
                    inputstring="put *.jar">
			<arg value="-b"/>
			<arg value="/dev/stdin"/>
			<arg value="${sf_frs_url}:${sveditor_dir}/${frs_update_site_dir}/${feature.version}/plugins"/>
		</exec>

		<!-- Now, copy the release archive -->
		<exec executable="sftp" dir="${buildResult}" inputstring="put sveditor-${feature.version}.jar">
			<arg value="-b"/>
			<arg value="/dev/stdin"/>
			<arg value="${sf_frs_url}:${sveditor_dir}/sveditor/${feature.version}"/>
		</exec>
		<exec executable="sftp" dir="${basedir}/.." inputstring="put sveditor-src-${feature.version}.zip">
			<arg value="-b"/>
			<arg value="/dev/stdin"/>
			<arg value="${sf_frs_url}:${sveditor_dir}/sveditor/${feature.version}"/>
		</exec>
		<exec executable="sftp" dir="${rlsdir}" inputstring="put rn.txt">
			<arg value="-b"/>
			<arg value="/dev/stdin"/>
			<arg value="${sf_frs_url}:${sveditor_dir}/sveditor/${feature.version}"/>
		</exec>

		<!-- Create the update-site directory, if it doesn't exist -->
		<exec executable="sftp" 
			inputstring="-mkdir ${sf_update_dir}">
			<arg value="-b"/>
			<arg value="/dev/stdin"/>
			<arg value="${sf_web_url}:htdocs"/>
		</exec>

		<!-- Finally, update the SVEditor Update Site -->
		<exec executable="scp" dir="${rlsdir}">
			<arg value="content.jar"/>
			<arg value="artifacts.jar"/>
			<arg value="${sf_update_url}"/>
		</exec>
	</target>

	<target name="mk_rn">
		<mkdir dir="${rlsdir}"/>
		<exec executable="perl" output="${rlsdir}/rn.txt">
			<arg value="${basedir}/mk_rn.pl"/>
			<arg value="${feature.version}"/>
			<arg value="${basedir}/../ChangeLog.txt"/>
		</exec>
	</target>

<!--
	<target name="mkupdate" depends="build">
		<mkdir dir="${rlsdir}/update_site"/>

		<unzip src="${basedir}/../sveditor-${feature.version}.jar"
			dest="${rlsdir}/update_site"/>
	</target>
  -->

	<target name="build">
		<delete dir="${buildResult}"/>
		<ant antfile="${basedir}/build.xml" dir="${basedir}" target="build"/>
	</target>

	<target name="mksrc">
		<exec executable="/bin/sh">
			<arg value="${basedir}/mksrc.sh"/>
		</exec>
	</target>

</project>


